name: Android Build

on:
  # Запускается при пуше в основную ветку
  push:
    branches: [ master, main ]
  # Запускается при создании PR в основную ветку
  pull_request:
    branches: [ master, main ]
  # Позволяет запускать workflow вручную из GitHub UI
  workflow_dispatch:  

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build React app
      run: npm run build
    
    - name: Install Capacitor CLI and sync
      run: |
        npm install -g @capacitor/cli
        npx cap sync android
    
    - name: Ensure Gradle is executable
      run: chmod +x ./android/gradlew
    
    # Сборка универсального APK
    - name: Build Universal APK
      working-directory: ./android
      run: |
        sed -i "s/abiFilters.*/abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'/g" app/build.gradle
        ./gradlew assembleDebug
        
    # Отображение информации
    - name: APK Build Information
      run: |
        echo "========================================================"
        echo "                 APK ФАЙЛ УСПЕШНО СОЗДАН                "
        echo "========================================================"
        echo "Местоположение файла в виртуальной среде сборки:"
        echo "android/app/build/outputs/apk/debug/app-debug.apk"
        echo ""
        echo "Для получения APK файла:"
        echo "1. Скомпилируйте приложение локально (см. SIMPLIFIED-BUILD.md)"
        echo "2. Или запросите файл у владельца репозитория"
        echo "========================================================"
        ls -l android/app/build/outputs/apk/debug/